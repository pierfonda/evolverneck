#include "generic_functions.el"

//qantity stretch energy method linear_elastic global
quantity bend energy modulus 1 	method star_perp_sq_mean_curvature global

INTEGRAL_ORDER_1D 12
INTEGRAL_ORDER_2D 7

// ***** PARAMETERS *****

PARAMETER  Z0LIM = -.000

PARAMETER  DIST = .44
PARAMETER  EPS = DIST/1.8

PARAMETER  RADX = 1
PARAMETER  RADY = 1
PARAMETER  RADZ = 1

PARAMETER  RINX = EPS*RADX
PARAMETER  RINY = EPS*RADY

PARAMETER  LX = 1.01*RADX
PARAMETER  LY = 1.01*RADY

PARAMETER  L2X = 5.5*RADX
PARAMETER  L2Y = 5.5*RADY

PARAMETER  SQ2 = sqrt(2.)
 	
// ***** BOUNDARY *****

// ***** CONSTRAINTS *****

// Mirror plane constraints

constraint x_mirror
formula: x = 0

constraint y_mirror 
formula: y = 0

constraint 1 nonnegative global
formula: x^2/RADX^2 + y^2/RADY^2 + (z-DIST-RADZ)^2/RADZ^2 - 1 = 0

constraint 2 nonnegative global
formula: z = Z0LIM

constraint 3
formula: x^2/L2X^2 + y^2/L2Y^2 = 1

constraint 4
formula: z = Z0LIM

// For viewing multiple copies of the fundamental region

view_transform_generators 2
// generator A: reflection in x_mirror
-1 0 0 0
0 1 0 0
0 0 1 0
0 0 0 1

// generator B: reflection in y_mirror
1  0 0 0 
0  -1 0 0
0  0 1 0
0  0 0 1

// ***** BOUNDARY *****

vertices   
1 	LX	    	0	    	DIST+2.01*RADZ  constraint 1,2,y_mirror
2 	LX/SQ2		LY/SQ2		DIST+2.01*RADZ	constraint 1,2
3 	0	    	LY	    	DIST+2.01*RADZ  constraint 1,2,x_mirror

100 	0       	0	    	DIST+2.01*RADZ  constraint 1,2,x_mirror,y_mirror

4 	LX	    	0	    	DIST	        constraint 1,2,y_mirror
5 	LX/SQ2		LY/SQ2		DIST	        constraint 1,2
6 	0	    	LY	    	DIST	    	constraint 1,2,x_mirror

7	RINX	    	0	    	2*DIST/3	constraint 1,2,y_mirror
8	RINX/SQ2	RINY/SQ2	2*DIST/3	constraint 1,2
9	0	    	RINY	    	2*DIST/3	constraint 1,2,x_mirror

10	RINX	    	0	   	DIST/3	        constraint 1,2,y_mirror
11	RINX/SQ2	RINY/SQ2 	DIST/3		constraint 1,2
12	0	    	RINY	    	DIST/3		constraint 1,2,x_mirror

13	3*RINX		0	   	0		constraint 1,2,y_mirror
14	3*RINX/SQ2   	3*RINY/SQ2	0	    	constraint 1,2
15	0	    	3*RINY		0	        constraint 1,2,x_mirror

16	L2X	    	0	    	0               constraint 3,4 //constraint 1,2,y_mirror
17	L2X/SQ2		L2Y/SQ2		0               constraint 3,4 //constraint 1,2,x_mirror
18	0	    	L2Y	  	0               constraint 3,4 //constraint 1,2,x_mirror

edges:

101 100 1 	constraint 1,2,y_mirror
103 100 3 	constraint 1,2,x_mirror

1 1 2		constraint 1,2
2 2 3		constraint 1,2

51 1 4		constraint 1,2,y_mirror
52 2 5		constraint 1,2
53 3 6		constraint 1,2,x_mirror

3 4 5		constraint 1,2
4 5 6		constraint 1,2

54 4 7		constraint 1,2,y_mirror
55 5 8		constraint 1,2
56 6 9		constraint 1,2,x_mirror

5 7 8		constraint 1,2
6 8 9		constraint 1,2

57 7 10		constraint 1,2,y_mirror
58 8 11		constraint 1,2
59 9 12		constraint 1,2,x_mirror

7 10 11		constraint 1,2
8 11 12		constraint 1,2

60 10 13	constraint 1,2,y_mirror
61 11 14	constraint 1,2
62 12 15	constraint 1,2,x_mirror

9 13 14		constraint 1,2
10 14 15	constraint 1,2

63 13 16	constraint 1,2,y_mirror
64 14 17	constraint 1,2
65 15 18	constraint 1,2,x_mirror

11 16 17	constraint 3,4 //constraint 1,2
12 17 18	constraint 3,4 //constraint 1,2

faces:

1	-1 -101 103 -2

20	1 52 -3 -51
21	2 53 -4 -52

30	3 55 -5 -54
31	4 56 -6 -55

40	5 58 -7 -57
41	6 59 -8 -58

50	7 61 -9 -60
51	8 62 -10 -61

60	9 64 -11 -63
61	10 65 -12 -64

// ***** MAIN *****

read

set_density(0);
transform_expr "a";	
post_project;
set edges color blue where on_constraint x_mirror;
set edges color red where on_constraint y_mirror;
set facets frontcolor lightcyan;
set facets backcolor yellow;

poea := {project_on_ellipse_above(RADX,RADY,RADZ,DIST,.5*DIST)};
poeb := {project_on_ellipse_above(RADX,RADY,RADZ,DIST,1.5*DIST)};
poellim := 1.1;
poel := {project_on_ellipse_lambda(RADX,RADY,RADZ,DIST,poellim)};

cof := {check_increase off};
ppo := {{w .0001; ggm(0,200); K .3; u;} 10};

dogo := {hessian_seek; r; g 100; uv(2); g 101; r ; g 101; uv(2); w 0.001; g 101; r; g 100; hessian_seek; g 101; uv(2); w 0.0001;}
fogo := {{ g 10; hessian_seek; r; {g 100; uv(2);} 2;  hessian_seek; g 101; {w 0.01; g 100; uv(2);} 2; w 0.01;}}
fogo1 :={g 10; hessian_seek; r; {g 100; uv(2);} 2;  hessian_seek; g 101; {g 100; uv(2);} 2;}
giogo :={fogo 2; fogo1; uv(2);g 100; uv(2); U; g 100; U; t 0.07; g 10; r; U; {g 20; uv(1)} 10; rh(1.5); check_increase; {g 20; uv(1)} 2;}
fuego :={ {{hessian_seek;} 5; r; hessian_seek; {g 10; uv(1);} 10 } 1; w 0.035; {r; g 200; uv(2);} 3}
ndemo :={l 2; {g 10; hessian_seek;} 3;}
namo := {ndemo 3; fogo; fogo1; r; {u;g 10} 20; U; {ggm(0,300); u;} 10; r; n .25; u; ggm(0,40); w 0.0002;  {u; ggm(0,40);} 10}
namo1 := {ndemo 3; fogo; fogo1; r; {u;g 10} 20; U; {ggm(0,300); w 0.0001; u;} 3; { ggm(0,200); uv(1);} 2} 
namo2 := {ndemo 3; fogo; fogo1; n .25; {u;g 10} 20; U; {ggm(0,300); u;} 3; { ggm(0,200); uv(1);} 2} 
namo4 := {ndemo 3; fogo; fogo1; r; ggm(0,100); U; gg(0); }
namo5 := {ndemo 3; u; O; o; ndemo; uv(1); ndemo 2; fogo; O; o; r; ggm(0,300);  }
namo6 := {poea; fogo 2; fogo1; U; {n .5; u; ggm(0,200);} 5}
namo7 := {poea 2; r; g 100;  u; ggm(0,200); r; u; ggm(0,200); U; {K .3; u; ggm(0,100); n .4; u 2; ggm(0,100); w 0.0001} 5; u; gg(0);} // r; {n .25; g 10; w .0001; g 10; u; ggm(0,100);} 20}

namo3 := {poea 2; r; g 10; ppo 10; U; g 10; w 0.0001; ppo 10; r; ndemo 5; ppo 10; cof; gg(0); ppo; w 0.0008; {gg(0); u;} 5; r; w 0.0008; {gg(0); u;} 5; }

savevertices:= foreach vertex vv do { printf "%f %f %f %d \n",vv.x,vv.y,vv.z,vv.id } | "cat >> one_sphere.vertices.dat"
savefacets:=  foreach facet ff do { printf "%d %d %d \n",ff.vertex[1].id,ff.vertex[2].id,ff.vertex[3].id } | "cat >> one_sphere.facets.dat"
saveall:= {savevertices; savefacets;}

e; Q; //s; 
check_increase;
ASSUME_ORIENTED;
sobolev_mode;
//namo3;
